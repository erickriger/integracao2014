package com.example.clientprojintegracao;

import android.app.IntentService;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.SystemClock;
import android.support.v4.app.NotificationCompat;
import android.util.Log;

import com.google.android.gms.gcm.GoogleCloudMessaging;

public class GCMNotificationIntentService extends IntentService {

	public static final int NOTIFICACAO_ID = 1;
	private NotificationManager notificationManager;
	NotificationCompat.Builder builder;

	public GCMNotificationIntentService() {
		super("GcmIntentService");
	}

	public static final String TAG = "GCMNotificationIntentService";

	@Override
	protected void onHandleIntent(Intent intent) {
		Bundle extras = intent.getExtras();
		GoogleCloudMessaging gcm = GoogleCloudMessaging.getInstance(this);

		String tipoMensagem = gcm.getMessageType(intent);

		if (!extras.isEmpty()) {
			if (GoogleCloudMessaging.MESSAGE_TYPE_SEND_ERROR
					.equals(tipoMensagem)) {
				sendNotification("Erro de envio: " + extras.toString());
			} else if (GoogleCloudMessaging.MESSAGE_TYPE_DELETED
					.equals(tipoMensagem)) {
				sendNotification("Mensagens deletadas no servidor: "
						+ extras.toString());
			} else if (GoogleCloudMessaging.MESSAGE_TYPE_MESSAGE
					.equals(tipoMensagem)) {

				for (int i = 0; i < 3; i++) {
					Log.i(TAG,
							"Rodando... " + (i + 1) + "/5 @ "
									+ SystemClock.elapsedRealtime());
					try {
						Thread.sleep(5000);
					} catch (InterruptedException e) {
					}

				}
				Log.i(TAG, "Execução completa @ " + SystemClock.elapsedRealtime());

				sendNotification("Mensagem recebida do GCM Server: "
						+ extras.get(Config.MESSAGE_KEY));
				Log.i(TAG, "Recebido: " + extras.toString());
			}
		}
		GcmBroadcastReceiver.completeWakefulIntent(intent);
	}

	private void sendNotification(String msg) {
		Log.d(TAG, "Preparando para enviar notificação...: " + msg);
		notificationManager = (NotificationManager) this
				.getSystemService(Context.NOTIFICATION_SERVICE);

		PendingIntent contentIntent = PendingIntent.getActivity(this, 0,
				new Intent(this, MainActivity.class), 0);

		NotificationCompat.Builder builder2 = new NotificationCompat.Builder(this)
				.setSmallIcon()
				.setContentTitle("Notificação GCM")
				.setStyle(new NotificationCompat.BigTextStyle().bigText(msg))
				.setContentText(msg);

		builder2.setContentIntent(contentIntent);
		notificationManager.notify(NOTIFICACAO_ID, builder2.build());
		Log.d(TAG, "Notificação enviada com sucesso.");
	}
}